{"version":3,"sources":["config.js","components/DefaultInput.js","server.js","containers/ClassesContainer.jsx","containers/ClassifyingPage.jsx","containers/ProjectsContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["MOBILE_BREAK_POINT","styled","div","input","error","Server","projectName","classes","this","send","url","data","project","image","imageClass","get","then","projects","payload","headers","Accept","method","body","JSON","stringify","fetch","getData","res","response","json","Container","InputContainer","ClassesBox","ClassItem","a","NewClass","button","Proceed","Error","p","ClassesContainer","state","inputError","newClassName","addClass","test","_","includes","setState","trim","handleChange","event","target","value","renderClass","classItem","createProject","selectedProject","props","next","placeHolder","onChange","onClick","map","Component","Controls","Img","img","Button","ClassifyingPage","componentDidMount","requestNewImage","loadNewImage","console","log","classify","selectedClass","classifyImage","selectClass","discardImage","src","classOption","type","name","checked","discard","ProjectsBox","Project","NewProject","ProjectsContainer","newProjectName","selectProject","render","size","placeholder","App","page","setProjects","keys","renderPage","getProjectsAvailable","catch","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a1662d85.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst ENVIRONMENT = \"DEVELOPMENT\";\r\n\r\nlet url = \"https://leasing.deals\";\r\n\r\nif (ENVIRONMENT === \"DEVELOPMENT\") {\r\n  url = \"http://localhost:3000\";\r\n} else if (ENVIRONMENT === \"STAGING\") {\r\n  url = \"https://staging.leasing.deals\";\r\n}\r\n\r\nexport const URL = url;\r\nexport const env = ENVIRONMENT;\r\nexport const MOBILE_BREAK_POINT_NUM = 600;\r\nexport const MOBILE_BREAK_POINT = `${MOBILE_BREAK_POINT_NUM}px`;\r\nexport const TABLET_BREAK_POINT = \"1024px\";\r\nexport const TABLET_CONDITION = `(max-width: ${TABLET_BREAK_POINT}) and (min-width: ${MOBILE_BREAK_POINT})`;\r\nexport const LARGE_SCREEN_BREAK_POINT = \"1900px\";\r\nexport const NORMAL_SCREEN_WIDTH = \"90vw\";\r\nexport const LARGE_SCREEN_WIDTH = \"1728px\";\r\nexport const PURPLE = \"#604cd5\";\r\nexport const LIGHT_GREY = \"#e0e0e0\";\r\n\r\nexport const DIV_FLEX = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const DIV_FLEX_SPACE_BETWEEN = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nexport const DIV_FLEX_CENTER = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import styled from \"styled-components\";\nimport { LARGE_SCREEN_BREAK_POINT, MOBILE_BREAK_POINT } from \"../config\";\n\nexport default styled.input`\n  border-radius: 5px;\n  width: 100%;\n  height: 3vw;\n  -moz-appearance: none; /* Firefox */\n  -webkit-appearance: none; /* Safari and Chrome */\n  appearance: none;\n  padding: 0.5vw 1.6vw;\n  font-size: 1vw;\n  color: #717171;\n  border: none;\n  border: ${({ error }) => (error ? \"1px solid red\":\"1px solid #ececec\" )};\n  background: ${({ error }) => (error ? \"#ffcccb\" : \"white\")};\n  @media only screen and (max-width: ${MOBILE_BREAK_POINT}) {\n    height: 9vw;\n    font-size: unset;\n  }\n  @media only screen and (min-width: ${LARGE_SCREEN_BREAK_POINT}) {\n    padding: 9px 30px;\n    border-radius: 7px;\n    font-size: 20px;\n    height: 60px;\n  }\n`;\n","const dev = process.env.NODE_ENV !== \"production\";\nexport default class Server {\n  static createProject({ projectName, classes }) {\n    return this.send({\n      url: `/api/create-project`,\n      data: {\n        projectName,\n        classes\n      }\n    });\n  }\n  static discardImage({ project, image }) {\n    return this.send({\n      url: `/api/discard-image`,\n      data: {\n        project,\n        image\n      }\n    });\n  }\n  static classifyImage({ imageClass, project, image }) {\n    return this.send({\n      url: `/api/classify-image`,\n      data: {\n        imageClass,\n        project,\n        image\n      }\n    });\n  }\n  static requestNewImage(project) {\n    return this.get(`/api/request-image/${project}`);\n  }\n  static getProjectsAvailable() {\n    return this.get(`/api/projects`).then(({ projects }) => projects);\n  }\n  static send({ url, data }) {\n    let payload = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(data)\n      //   credentials: 'same-origin'\n    };\n    return fetch(url, payload).then(this.getData);\n    // .catch(err => console.log(err));\n    // .then(this.parseJson);\n  }\n  static get(url) {\n    let payload = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(url, payload).then(res => this.getData(res));\n    // .catch(err => console.log(err));\n    // .then(this.parseJson);\n  }\n  static getData(response) {\n    return response.json();\n  }\n}\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"../components/DefaultInput\";\nimport Server from \"../server\";\n\nconst Container = styled.div``;\nconst InputContainer = styled.div`\n  display: flex;\n  width: 30vw;\n`;\nconst ClassesBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  width: 30vw;\n`;\nconst ClassItem = styled.a`\n  padding: 10px 0;\n  width: 100%;\n`;\nconst NewClass = styled.button`\n  padding: 10px 20px;\n`;\nconst Proceed = styled.button`\n  padding: 10px 20px;\n`;\nconst Error = styled.p`\n  color: red;\n`;\nclass ClassesContainer extends Component {\n  state = {\n    classes: [],\n    inputError: false,\n    newClassName: \"\"\n  };\n  addClass = () => {\n    const { classes, newClassName } = this.state;\n    if (!/^[ A-Za-z0-9_@.#&+-]*$/.test(newClassName)) {\n      this.setState({ inputError: \"Invalid character(s)\" });\n    } else if (_.includes(classes, newClassName))\n      this.setState({ inputError: \"Class Name already used\" });\n    else\n      this.setState({\n        classes: [...classes, _.trim(newClassName)],\n        inputError: false\n      });\n  };\n  handleChange = event => this.setState({ newClassName: event.target.value });\n  renderClass = classItem => <ClassItem>{classItem}</ClassItem>;\n  createProject = () => {\n    const { selectedProject } = this.props;\n    const { projectName, classes } = this.state;\n    Server.createProject({ projectName: selectedProject, classes });\n    this.props.next();\n  };\n  render() {\n    const { newClassName, classes, inputError } = this.state;\n    return (\n      <Container>\n        <InputContainer>\n          <Input\n            value={newClassName}\n            placeHolder=\"Enter a Class name\"\n            onChange={this.handleChange}\n          />\n          <NewClass onClick={this.addClass}>ADD</NewClass>\n        </InputContainer>\n        {inputError && <Error>{inputError}</Error>}\n        <ClassesBox>{_.map(classes, this.renderClass)}</ClassesBox>\n        <Proceed onClick={this.createProject}>Proceed</Proceed>\n      </Container>\n    );\n  }\n}\n\nexport default ClassesContainer;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Server from \"../server\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Img = styled.img`\n  width: 65vw;\n`;\nconst Button = styled.button`\n  padding: 10px 20px;\n`;\nclass ClassifyingPage extends Component {\n  state = {};\n  componentDidMount = () => {\n    Server.requestNewImage(this.props.selectedProject).then(this.loadNewImage);\n  };\n  loadNewImage = res => {\n    console.log({res})\n    this.setState({ ...res })};\n  classify = () => {\n    const { img, selectedClass } = this.state;\n    const { selectedProject } = this.props;\n    Server.classifyImage({\n      imageClass: selectedClass,\n      project: selectedProject,\n      image: img\n    }).then(this.loadNewImage);\n  };\n  selectClass = event => this.setState({ selectedClass: event.target.value });\n  discard() {\n    const { img } = this.state;\n    const { selectedProject } = this.props;\n    Server.discardImage({ project: selectedProject, image: img }).then(\n      this.loadNewImage\n    );\n  }\n  render() {\n    const { classes, img, selectedClass } = this.state;\n    return (\n      <Container>\n        <Img src={img} />\n        <Controls>\n          <div>\n            {_.map(classes, classOption => (\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"classes\"\n                  value={classOption}\n                  checked={selectedClass === classOption}\n                  onChange={this.selectClass}\n                />\n                {classOption}\n              </label>\n            ))}\n          </div>\n          <div>\n            <Button onClick={this.classify}>Submit</Button>\n            <Button onClick={this.discard}>discard</Button>\n          </div>\n        </Controls>\n      </Container>\n    );\n  }\n}\n\nexport default ClassifyingPage;\n","import _ from \"lodash\";\nimport { Component, default as React } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"../components/DefaultInput\";\n\nconst ProjectsBox = styled.div`\n  border-radius: 5px;\n  width: 30vw;\n`;\nconst Project = styled.a`\n  display: block;\n  padding: 10px 0;\n  border-top:1px solid #ececec;\n  border-bottom:1px solid #ececec;\n  text-align: center;\n  width: 100%;\n`;\nconst NewProject = styled.button`\n  padding: 10px 20px;\n`;\nconst Error = styled.p`\n  color: red;\n`;\n\nclass ProjectsContainer extends Component {\n  state = { newProjectName: \"\", error: null };\n  handleChange = event => this.setState({ newProjectName: event.target.value });\n  createProject = () => {\n    const { projects, selectProject, next } = this.props;\n    const { newProjectName } = this.state;\n    if (!/^[ A-Za-z0-9_@.#&+-]*$/.test(newProjectName)) {\n      this.setState({ error: \"Invalid character(s)\" });\n    } else if (!_.includes(projects, newProjectName)) {\n      //   Server.createProject(newProjectName)\n      selectProject(newProjectName);\n    } else\n      this.setState({ error: \"Project Name exists. Please try another name\" });\n  };\n  render = () => {\n    const { selectProject, projects } = this.props;\n    const { newProjectName, error } = this.state;\n    return (\n      <div>\n        {!projects && <p>Loading</p>}\n        {projects && projects.error && <p>Error loading Projects</p>}\n        <p>Select a project to continue classifying</p>\n        <ProjectsBox>\n        {_.size(projects) === 0 && <Project>\n              No projects found\n            </Project>}\n          {_.map(projects, (project, projectName) => (\n            <Project onClick={() => selectProject(projectName)}>\n              {projectName}\n            </Project>\n          ))}\n        </ProjectsBox>\n        <p>Or Create A New Project</p>\n        <Input\n          placeholder=\"New Project Name\"\n          value={newProjectName}\n          onChange={this.handleChange}\n        />\n        <NewProject onClick={this.createProject}>Add new Project</NewProject>\n        <Error>{error}</Error>\n      </div>\n    );\n  };\n}\n\nexport default ProjectsContainer;\n","import _ from \"lodash\";\nimport { Component, default as React } from \"react\";\nimport \"./App.css\";\nimport ClassesContainer from \"./containers/ClassesContainer\";\nimport ClassifyingPage from \"./containers/ClassifyingPage\";\nimport ProjectsContainer from \"./containers/ProjectsContainer\";\nimport Server from \"./server\";\n\nconst PROJECTS_PAGE = 0;\nconst SET_CLASSES_PAGE = 1;\nconst CLASSIFYING_PAGE = 2;\nclass App extends Component {\n  state = {\n    page: 0\n  };\n\n  componentDidMount() {\n    Server.getProjectsAvailable()\n      .then(this.setProjects)\n      .catch(error => {\n        console.log({ error });\n        this.setProjects({ error: true });\n      });\n  }\n\n  next = () => this.setState({ page: this.state.page + 1 });\n\n  setProjects = projects => this.setState({ projects });\n\n  selectProject = selectedProject => {\n    const { projects } = this.state;\n    this.setState({ selectedProject: _.trim(selectedProject) });\n    if (_.includes(_.keys(projects), selectedProject)) {\n      this.setState({ page: CLASSIFYING_PAGE });\n    } else this.next();\n  };\n\n  renderPage = () => {\n    const { page, selectedProject, projects } = this.state;\n    switch (page) {\n      case PROJECTS_PAGE:\n        return (\n          <ProjectsContainer\n            selectProject={this.selectProject}\n            next={this.next}\n            projects={projects}\n          />\n        );\n      case SET_CLASSES_PAGE:\n        return (\n          <ClassesContainer\n            selectedProject={selectedProject}\n            next={this.next}\n          />\n        );\n      case CLASSIFYING_PAGE:\n        return <ClassifyingPage selectedProject={selectedProject} />;\n      default:\n        break;\n    }\n  };\n  render() {\n    return this.renderPage();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}